This scenario compares the update performance for different index types (all grains are persisted)
- NotIndexed
- AIndex
- IIndex
- DSMIndex
- FTIIndex

Fixed parameters, i.e., hard coded in the grain classes
- grains are persisted
- index type: default, i.e., single grain hash index
- Number of indexed fields: 1
- AIndex and IIndex are not fault-tolerant, i.e., grains extend IndexableGrainNonFaultTolerant
- FTIIndex is fault-tolerant IIndex
- index updates are lazy
- data type of the indexed field: string
- key range of the indexed field: "location_0" ... "location_[N-1]" (where N is the "distinctKeyCount" paramter below)

Parameters, used in JSON string
- indexType: type of the index to use, possible values are "NotIndexedNotPersisted", "NotIndexedPersisted", "IndexedNotPersisted", and "IndexedPersisted""
  - type: string
  - default: "NotIndexed", if not set

- numRobots: number of concurrent robots running the benchmark
  - type: int
  - default: no default
- runTimeSecs: run time of the benchmark in seconds
  - type: int
  - default: 60 seconds, if not set
- grainCount: number of grains in the experiment - each update targets a random grain 
  - type: int
  - default: 1 grain, if not set
- distinctKeyCount: number of distinct keys - each update picks a random key
  - type: int
  - default: 1 key, if not set

- randomseed: seed for the random number generator
  - type: int
  - default: new Random(seed + parameters.randomseedoffset).Next();
- randomseedoffset: used to generator the randomseed, if it is not set explicetly
  - type: int
  - default: 0, if not set

- scenarioType: selects the scenario to run - must be equal to "scenario01" in this case
  - type: string
- sendbackdelay: needed to not overwhelm conductor with results, and also needed to not influence request performance by sending back results 
  - type: int
  - default: 8000ms, if not set

Example:
{ benchmark: "indexing", prototype: { runTimeSecs: 60, scenarioType: "scenario05", numGrainTypes:5, grainCount:1, distinctKeyCount:10000, randomseed: 1267897555}, scenarios: [ {indexType: "NotIndexed", numRobots:300 }, {indexType:"AIndex", numRobots:200}, {indexType:"IIndex", numRobots:200}, {indexType:"DSMIndex", numRobots:200}, {indexType:"FTIIndex", numRobots:200} ] }

{ benchmark: "indexing", prototype: { runTimeSecs: 60, scenarioType: "scenario05", numGrainTypes:15, grainCount:10000, distinctKeyCount:10000, randomseed: 1267897555}, scenarios: [ {indexType: "NotIndexed", numRobots:3000 }, {indexType:"AIndex", numRobots:2000}, {indexType:"IIndex", numRobots:2000}, {indexType:"DSMIndex", numRobots:2000}, {indexType:"FTIIndex", numRobots:2000} ] }
{ benchmark: "indexing", prototype: { runTimeSecs: 60, scenarioType: "scenario05", numGrainTypes:15, grainCount:10000, distinctKeyCount:10000, randomseed: 1267897555}, scenarios: [ {indexType: "NotIndexed", numRobots:4500 }, {indexType:"AIndex", numRobots:4500}, {indexType:"IIndex", numRobots:4500}, {indexType:"DSMIndex", numRobots:4500}, {indexType:"FTIIndex", numRobots:4500} ] }
{ benchmark: "indexing", prototype: { runTimeSecs: 60, scenarioType: "scenario05", numGrainTypes:15, grainCount:10000, distinctKeyCount:10000, randomseed: 1267897555}, scenarios: [ {indexType: "NotIndexed", numRobots:5500 }, {indexType:"AIndex", numRobots:5500}, {indexType:"IIndex", numRobots:5500}, {indexType:"DSMIndex", numRobots:5500}, {indexType:"FTIIndex", numRobots:5500} ] }
